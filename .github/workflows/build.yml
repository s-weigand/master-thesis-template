name: "Build"
on:
  workflow_dispatch:
  push:
    tags:
      - v**
    branches-ignore:
      - "dependabot/**"
      - "sourcery/**"
      - "create-pr-action/**"
  pull_request:

jobs:
  pre-commit:
    name: ðŸ§¹ Run pre-commit
    runs-on: ubuntu-22.04
    steps:
      - name: Check out repo
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - name: Run pre-commit
        uses: pre-commit/action@v3.0.0

  build:
    name: ðŸš€ Compile and upload master thesis
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - uses: actions/cache@v3
        name: Tectonic Cache
        with:
          path: ~/.cache/Tectonic
          key: ${{ runner.os }}-tectonic-${{ hashFiles('**/_preamble*.tex') }}
          restore-keys: |
            ${{ runner.os }}-tectonic-

      - name: Install Conda environment with Micromamba
        uses: mamba-org/provision-with-micromamba@v15
        with:
          cache-env: true

      - name: Setup tectonic and biber
        uses: wtfjoke/setup-tectonic@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          biber-version: "2.17"

      - name: Run Notebooks and compile thesis
        run: |
          python scripts/run_notebook_and_compile.py

      - name: Upload src/master_thesis.pdf
        uses: actions/upload-artifact@v3
        with:
          name: master-thesis
          path: src/master_thesis.pdf

      - name: Create requirements.txt
        if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
        run: pip freeze > requirements.txt

      - name: Create release asset
        if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
        run: zip -r master_thesis.zip src/master_thesis.pdf requirements.txt notebooks images

      - name: Create Release
        if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./master_thesis.zip
          asset_name: master_thesis.zip
          asset_content_type: application/zip
